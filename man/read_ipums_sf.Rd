% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shape_read.r
\name{read_ipums_sf}
\alias{read_ipums_sf}
\title{Read boundary (GIS) files from an IPUMS extract}
\usage{
read_ipums_sf(
  shape_file,
  file_select = NULL,
  vars = NULL,
  encoding = NULL,
  bind_multiple = FALSE,
  add_layer_var = NULL,
  ...,
  verbose = deprecated(),
  shape_layer = deprecated()
)
}
\arguments{
\item{shape_file}{Path to a single .shp file, or a .zip archive or
directory containing at least one .shp file. See details.}

\item{file_select}{If \code{shape_file} contains multiple files, an expression
identifying the files to load. Accepts a character string specifying the
file name, \code{\link{dplyr_select_style}} conventions, or index positions. If
multiple files are selected, \code{bind_multiple} must be equal to \code{TRUE}.}

\item{vars}{Names of variables to include in the output data.
By default, includes all variables found in the provided \code{shape_file}.}

\item{encoding}{The text encoding to use when reading the shape file. Typically
the defaults should read the data correctly, but for some extracts you may
need to set them manually.
If \code{NULL}, will attempt to guess the correct encoding using the associated
.cpg file. If none is available, it will default to \code{"latin1"}.
NHGIS files default to \code{"latin1"}. Terra files default to \code{"UTF-8"}.}

\item{bind_multiple}{If \code{TRUE} and \code{shape_file} contains multiple .shp files,
row-bind the files into a single output.}

\item{add_layer_var}{If \code{TRUE}, add a variable to the output data indicating
the file that each row originates from. By default, this column will be
named \code{"layer"}. If \code{"layer"} already exists in the data, a unique name
will be created to avoid name conflicts. The column name will always be
prefixed with \code{"layer"}. Defaults to \code{TRUE} if \code{bind_multiple = TRUE} and
\code{FALSE} otherwise.}

\item{...}{Additional arguments passed to \code{\link[sf:st_read]{sf::read_sf()}}.}

\item{verbose}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use \code{quiet}
(passed to \code{sf::read_sf}) instead.}

\item{shape_layer}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use
\code{file_select} instead.}
}
\value{
An \code{sf} object
}
\description{
Read spatial data from an IPUMS extract into R using the
\href{https://r-spatial.github.io/sf/}{\code{sf}} package.
}
\details{
Some IPUMS products provide shapefiles in a "nested" .zip archive. That is,
each shapefile (including a .shp as well as accompanying files) is
compressed in its own archive, and the collection of all
shapefiles provided in an extract are also compressed into a single .zip
archive.

\code{read_ipums_sf()} is designed to handle this structure. However, if an
internal .zip archive happens to contain \emph{multiple} shapefiles, this function
will throw an error. If this is the case, you may need to manually unzip the
downloaded file before loading it into R.
}
\examples{
shape_file <- ipums_example("nhgis0972_shape_small.zip")
# If sf package is availble, can load as sf object
if (require(sf)) {
  sf_data <- read_ipums_sf(shape_file)
}

}
\seealso{
Other ipums_read: 
\code{\link{read_ipums_micro_chunked}()},
\code{\link{read_ipums_micro_yield}()},
\code{\link{read_ipums_micro}()},
\code{\link{read_ipums_sp}()},
\code{\link{read_nhgis}()},
\code{\link{read_terra_area}()},
\code{\link{read_terra_micro}()},
\code{\link{read_terra_raster}()}
}
\concept{ipums_read}
