% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{remove_from_extract.nhgis_extract}
\alias{remove_from_extract.nhgis_extract}
\title{Remove values from an existing NHGIS extract}
\usage{
\method{remove_from_extract}{nhgis_extract}(
  extract,
  datasets = NULL,
  data_tables = NULL,
  time_series_tables = NULL,
  geog_levels = NULL,
  years = NULL,
  breakdown_values = NULL,
  geographic_extents = NULL,
  shapefiles = NULL,
  ...
)
}
\arguments{
\item{extract}{An \code{\link[=ipums_extract-class]{ipums_extract}} object.}

\item{datasets}{Character vector of
\link[=https://www.nhgis.org/overview-nhgis-datasets]{datasets} to remove from
the extract. All dataset subfields associated with the specified
\code{datasets} will also be removed. See details.}

\item{data_tables}{Summary tables to remove from the specified \code{datasets}.

Can be provided as a vector or list; see details for syntax options.}

\item{time_series_tables}{Character vector of
\href{https://www.nhgis.org/time-series-tables}{time series tables}
to remove from the extract. All time series table subfields associated
with the specified \code{time_series_tables} will also be removed. See details.}

\item{geog_levels}{Geographic levels to remove from the extract.

Can be provided as a vector or list; see details for syntax options.}

\item{years}{Years to remove from the extract.

Can be provided as a vector or list; see details for syntax options.}

\item{breakdown_values}{\href{https://www.nhgis.org/frequently-asked-questions-faq#breakdowns}{breakdown values}
to remove from the extract.

Can be provided as a vector or a list; see details for syntax options.}

\item{geographic_extents}{Geographic extents to remove from the extract.}

\item{shapefiles}{Character vector of
\href{https://www.nhgis.org/gis-files}{shapefiles} to remove from the extract.}

\item{...}{Ignored}
}
\value{
A modified \code{nhgis_extract} object
}
\description{
Remove existing values from an IPUMS NHGIS extract. All
fields are optional, and if omitted, will be unchanged.

To add new values to an IPUMS NHGIS extract, see
\code{\link[=add_to_extract.nhgis_extract]{add_to_extract()}}. When replacing values,
it is best to first add new values using
\code{add_to_extract()} before removing values with
\code{remove_from_extract()}. This limits the possibility of producing a
temporarily invalid extract specification.

In general, removing from an extract follows the same syntax conventions as
used in \code{\link[=define_extract_nhgis]{define_extract_nhgis()}}. See details for
more information on how values passed to dataset and time series table
subfields are interpreted.
}
\details{
NHGIS extracts may contain multiple datasets or time series tables. Each
dataset or time series table is associated with several subfields that apply
only to that particular dataset or time series table.

The following arguments are applied to an extract's \code{datasets}:
\itemize{
\item \code{data_tables}
\item \code{years}
\item \code{breakdown_values}
}

The following arguments are applied to an extract's \code{datasets} and
\code{time_series_tables}:
\itemize{
\item \code{geog_levels}
}

There are three ways the values passed to these arguments can be provided:
\itemize{
\item If values are passed as a \strong{vector}, they will be
removed from all of the \code{datasets} and/or \code{time_series_tables}
that exist in the extract.
\item If values are passed as an \strong{unnamed list}, they will be
matched by index to the \code{datasets} and/or \code{time_series_table} that
exist in the extract and removed from those \code{datasets} and/or
\code{time_series_tables}. For instance, the first element will be associated
with the first dataset in the extract, the second element with the second
dataset, etc.
\itemize{
\item \code{geog_levels} applies to both \code{datasets} and \code{time_series_tables}.
When matching by index, the provided \code{geog_levels} will be matched
first to the extract's \code{datasets}, then to the extract's
\code{time_series_tables}.
}
\item If values are passed as a \strong{named list} or \strong{named vector}, they
will be matched to (and removed from) the \code{datasets} and/or
\code{time_series_tables} by name.
}

Importantly, subfields are modified \emph{after} the removal of any \code{datasets}
and \code{time_series_tables} specified in \code{datasets} or
\code{time_series_tables} arguments. This can cause confusion if providing
unnamed lists to subfield arguments, as the index position of each dataset
and/or time series table in the extract may shift after removing the
provided \code{datasets} and \code{time_series_tables}. It is safest to use the named
list syntax for subfields to avoid this ambiguity.

Any extract fields that are rendered irrelevant after modifying the extract
will be automatically removed. (For instance, if all \code{time_series_tables}
are removed from an extract, \code{tst_layout} will also be
removed.) Thus, it is not necessary to explicitly remove these values. To
replace the existing values for these fields, see
\code{\link[=add_to_extract.nhgis_extract]{add_to_extract()}}

Note that it is possible to produce invalid extracts using
\code{remove_from_extract()} (for instance, an extract that includes a
time series table without associated geographic levels). This can occur if
you intend to replace the existing values for a required extract field.
If the goal is not to remove values but to replace them,
it is best to first use \code{add_to_extract()},
then \code{remove_from_extract()}, as this will avoid the possibility
of temporarily producing an invalid extract.

If the supplied extract definition comes from
a previously submitted extract, this function will reset the definition to an
unsubmitted state.
}
\examples{

library(dplyr)

extract <- define_extract_nhgis(
  datasets = "1990_STF1",
  data_tables = c("NP1", "NP2", "NP3"),
  geog_levels = "county",
)

# Remove tables from existing datasets in extract:
remove_from_extract(
  extract,
  data_tables = "NP3"
)

extract2 <- define_extract_nhgis(
  time_series_tables = c("CW3", "CW5"),
  geog_levels = c("state", "county")
)

# Remove an entire time series table:
remove_from_extract(
  extract2,
  time_series_tables = "CW3"
)

# Use a list to remove subfield values from specific datasets or time
# series tables.
remove_from_extract(
  extract2,
  geog_levels = list(CW5 = "state", CW3 = "county")
)

# Replace values by using `add_to_extract()` first:
extract2 \%>\%
  add_to_extract(
    geog_levels = list(CW3 = "tract")
  ) \%>\%
  remove_from_extract(
    geog_levels = list(CW3 = c("county", "state"))
  )

}
