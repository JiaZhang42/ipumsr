// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// raw_to_df_hier_list
RObject raw_to_df_hier_list(List raw_, List rt_info_, List var_info_, CharacterVector encoding_);
RcppExport SEXP _ripums_raw_to_df_hier_list(SEXP raw_SEXP, SEXP rt_info_SEXP, SEXP var_info_SEXP, SEXP encoding_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type raw_(raw_SEXP);
    Rcpp::traits::input_parameter< List >::type rt_info_(rt_info_SEXP);
    Rcpp::traits::input_parameter< List >::type var_info_(var_info_SEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type encoding_(encoding_SEXP);
    rcpp_result_gen = Rcpp::wrap(raw_to_df_hier_list(raw_, rt_info_, var_info_, encoding_));
    return rcpp_result_gen;
END_RCPP
}
// raw_to_df_hier_long
RObject raw_to_df_hier_long(List raw_, int num_vars, List rt_info_, List var_info_, CharacterVector encoding_);
RcppExport SEXP _ripums_raw_to_df_hier_long(SEXP raw_SEXP, SEXP num_varsSEXP, SEXP rt_info_SEXP, SEXP var_info_SEXP, SEXP encoding_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type raw_(raw_SEXP);
    Rcpp::traits::input_parameter< int >::type num_vars(num_varsSEXP);
    Rcpp::traits::input_parameter< List >::type rt_info_(rt_info_SEXP);
    Rcpp::traits::input_parameter< List >::type var_info_(var_info_SEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type encoding_(encoding_SEXP);
    rcpp_result_gen = Rcpp::wrap(raw_to_df_hier_long(raw_, num_vars, rt_info_, var_info_, encoding_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ripums_raw_to_df_hier_list", (DL_FUNC) &_ripums_raw_to_df_hier_list, 4},
    {"_ripums_raw_to_df_hier_long", (DL_FUNC) &_ripums_raw_to_df_hier_long, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ripums(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
